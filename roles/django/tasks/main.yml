---

- name: Install System Packages
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  sudo: yes
  with_items:
    - build-essential
    - python-dev
    - python3.4-dev
    - python-pip
    - postgresql-client
    - libpq-dev
    - python-psycopg2
    - git
    - python-virtualenv
    - libjpeg8-dev
    - libjpeg-dev

- name: Clone Django Repository
  git: repo={{ django_repo }} dest={{ django_home }} force=yes version=wrap-up

- name: Install Python Dependencies
  pip:
    virtualenv_python: python3.4
    virtualenv: "{{ django_venv }}"
    state: present
    requirements: "{{ django_home }}/requirements.txt"

- name: Get DB Hostvars
  vars:
    rds_url: "{{ hostvars[ansible_host].groups.rds[0] }}"
  set_fact:
    db_host: "{{ hostvars[rds_url] }}"

- name: Set DB URL
  set_fact:
    db_url: "{{ db_host.ec2_engine }}://{{ db_host.ec2_master_username }}:{{ db_password }}@{{ db_host.ec2__address }}:{{ db_host.ec2__port }}/{{ db_host.ec2_DBName}}"

- name: debug db_host
  debug: var=db_url

- name: Run Migrations
  environment:
    DATABASE_URL: "{{ db_url }}"
    DEBUG: "False"
    EMAIL_HOST_PASSWORD: "{{ email_password }}"
    SECRET_KEY: "{{ secret_key }}"
  django_manage:
    virtualenv: "{{ django_venv }}"
    app_path: "{{ django_home }}/imagersite"
    command: migrate

- name: Collect Static Files
  environment:
    DATABASE_URL: "{{ db_url }}"
    DEBUG: "False"
    EMAIL_HOST_PASSWORD: "{{ email_password }}"
    SECRET_KEY: "{{ secret_key }}"
  sudo: yes
  django_manage:
    virtualenv: "{{ django_venv }}"
    app_path: "{{ django_home }}/imagersite"
    command: collectstatic
